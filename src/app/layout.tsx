import { createServerComponentSupabaseClient } from "@supabase/auth-helpers-nextjs";
import { Analytics } from "@vercel/analytics/react";
import { cookies, headers } from "next/headers";
import Link from "next/link";
import SupabaseProvider from "./_components/supabase-provider";
import { type Database } from "~/lib/database.types";
import "./globals.css";
import { type ReactNode } from "react";
import LogoutItem from "./_components/LogoutItem";
import { prisma } from "~/lib/prisma";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const supabase = createServerComponentSupabaseClient<Database>({
    headers,
    cookies,
  });
  const user = await supabase.auth.getUser().then((res) => res.data.user);
  const profile = await prisma.user.findFirst({
    where: { id: user?.id },
  });
  return (
    <html lang="en">
      <body>
        <SupabaseProvider>
          <div>
            <div className="flex h-full rounded-lg">
              <div className="sticky top-0 hidden h-screen md:flex md:shrink-0">
                <div className="flex w-64 flex-col">
                  <div className="flex grow flex-col overflow-y-auto bg-neutral-800 pt-5">
                    <div className="flex shrink-0 flex-col items-center px-4">
                      <Link
                        href="/"
                        className="px-8 text-left focus:outline-none"
                      >
                        <h2 className="block cursor-pointer p-2 text-xl font-medium tracking-tighter text-neutral-200 transition duration-500 ease-in-out hover:text-neutral-200">
                          Default_is_Private
                        </h2>
                      </Link>
                    </div>
                    <div className="mt-5 flex grow flex-col px-4">
                      <nav className="flex-1 space-y-1 bg-neutral-800">
                        <ul>
                          <Item href="/" active>
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                              ></path>
                            </svg>
                            <span className="ml-4"> タイムライン</span>
                          </Item>

                          {/* <Item href="/">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                              ></path>
                            </svg>
                            <span className="ml-4">Chat</span>
                          </Item> */}
                          {profile && (
                            <Item href={`/${profile.username}`}>
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                className="h-4 w-4"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                              >
                                <path
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth="2"
                                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                                ></path>
                              </svg>
                              <span className="ml-4">プロフィール</span>
                            </Item>
                          )}
                          {/* <Item href="/">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                              ></path>
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                              ></path>
                            </svg>
                            <span className="ml-4">Settings</span>
                          </Item> */}
                        </ul>
                        {/* <p className="px-4 pt-4 font-medium uppercase text-neutral-200">
                          Shortcuts
                        </p> */}
                        <ul>
                          {/* <Item href="/">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"
                              ></path>
                            </svg>
                            <span className="ml-4"> Tasks</span>
                          </Item>
                          <Item href="/">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                              ></path>
                            </svg>
                            <span className="ml-4"> Reports</span>
                          </Item>
                          <Item href="/">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-4 w-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"
                              ></path>
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z"
                              ></path>
                            </svg>
                            <span className="ml-4"> Dashboard</span>
                          </Item> */}
                          {user && <LogoutItem />}
                        </ul>
                      </nav>
                    </div>
                    <div className="flex shrink-0 bg-neutral-900 p-4">
                      {user && profile ? (
                        <Link
                          href={`/${profile.username}`}
                          className="group block w-full shrink-0"
                        >
                          <div className="flex items-center ">
                            <div className="inline-block h-9 w-9 rounded-full bg-gray-600"></div>
                            <div className="ml-3 flex flex-col justify-center">
                              {/* <p className="text-sm font-medium text-neutral-200">
                                {profile?.name}
                              </p> */}
                              <p className="text-sm font-semibold">
                                {profile.name}
                              </p>
                              <p className="text-xs text-gray-400">
                                {profile.username}
                              </p>
                            </div>
                          </div>
                        </Link>
                      ) : (
                        <div className=" flex w-full shrink-0 list-none items-center justify-around gap-2 lg:ml-auto">
                          <Link
                            href={"/register"}
                            className="block items-center rounded-xl border-2 border-white px-8 py-2.5 text-center text-base font-medium text-blue-600 shadow-md transition duration-500 ease-in-out focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
                          >
                            SignIn
                          </Link>
                          <Link
                            href={"/register"}
                            className="block items-center rounded-xl bg-blue-600 px-8 py-3 text-center text-base font-medium text-white transition duration-500 ease-in-out hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                          >
                            SignUp
                          </Link>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
              <div className="flex w-0 flex-1 flex-col overflow-hidden">
                <main className="relative flex-1 overflow-y-auto focus:outline-none">
                  <div className="mx-auto max-w-7xl">{children}</div>
                </main>
              </div>
            </div>
          </div>
        </SupabaseProvider>
        <Analytics />
      </body>
    </html>
  );
}
const Item = ({
  active,
  children,
  href,
}: {
  active?: boolean;
  children: ReactNode;
  href: string;
}) => {
  if (active)
    return (
      <li>
        <Link
          href={href}
          className="mt-1 inline-flex w-full items-center rounded-lg border border-neutral-900 bg-neutral-900 px-4 py-2 text-base text-neutral-200 transition duration-500 ease-in-out focus:shadow"
          // white="" 70="" href="#"
        >
          {children}
        </Link>
      </li>
    );
  return (
    <li>
      <Link
        className="mt-1 inline-flex w-full items-center rounded-lg border border-neutral-800 px-4 py-2 text-base text-neutral-200 transition duration-500 ease-in-out hover:border-neutral-800 hover:bg-neutral-900 focus:shadow"
        href={href}
      >
        {children}
      </Link>
    </li>
  );
};
